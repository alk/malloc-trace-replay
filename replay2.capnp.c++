// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: replay2.capnp

#include "replay2.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<47> b_dd4c380c534c12c7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    199,  18,  76,  83,  12,  56,  76, 221,
     14,   0,   0,   0,   1,   0,   2,   0,
     21,  94, 246, 212, 107,  23, 244, 229,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97, 121,  50,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    108, 108, 111,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 103,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dd4c380c534c12c7 = b_dd4c380c534c12c7.words;
#if !CAPNP_LITE
static const uint16_t m_dd4c380c534c12c7[] = {0, 1};
static const uint16_t i_dd4c380c534c12c7[] = {0, 1};
const ::capnp::_::RawSchema s_dd4c380c534c12c7 = {
  0xdd4c380c534c12c7, b_dd4c380c534c12c7.words, 47, nullptr, m_dd4c380c534c12c7,
  0, 2, i_dd4c380c534c12c7, nullptr, nullptr, { &s_dd4c380c534c12c7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_bf25c4c72a3e1acc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    204,  26,  62,  42, 199, 196,  37, 191,
     14,   0,   0,   0,   1,   0,   1,   0,
     21,  94, 246, 212, 107,  23, 244, 229,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97, 121,  50,  46,
     99,  97, 112, 110, 112,  58,  70, 114,
    101, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 103,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bf25c4c72a3e1acc = b_bf25c4c72a3e1acc.words;
#if !CAPNP_LITE
static const uint16_t m_bf25c4c72a3e1acc[] = {0};
static const uint16_t i_bf25c4c72a3e1acc[] = {0};
const ::capnp::_::RawSchema s_bf25c4c72a3e1acc = {
  0xbf25c4c72a3e1acc, b_bf25c4c72a3e1acc.words, 32, nullptr, m_bf25c4c72a3e1acc,
  0, 1, i_bf25c4c72a3e1acc, nullptr, nullptr, { &s_bf25c4c72a3e1acc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_b506b6c78f94928c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    140, 146, 148, 143, 199, 182,   6, 181,
     14,   0,   0,   0,   1,   0,   3,   0,
     21,  94, 246, 212, 107,  23, 244, 229,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97, 121,  50,  46,
     99,  97, 112, 110, 112,  58,  77, 101,
    109,  97, 108, 105, 103, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 103,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 108, 105, 103, 110, 109, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b506b6c78f94928c = b_b506b6c78f94928c.words;
#if !CAPNP_LITE
static const uint16_t m_b506b6c78f94928c[] = {2, 0, 1};
static const uint16_t i_b506b6c78f94928c[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b506b6c78f94928c = {
  0xb506b6c78f94928c, b_b506b6c78f94928c.words, 63, nullptr, m_b506b6c78f94928c,
  0, 3, i_b506b6c78f94928c, nullptr, nullptr, { &s_b506b6c78f94928c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_88766922f6704980 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    128,  73, 112, 246,  34, 105, 118, 136,
     14,   0,   0,   0,   1,   0,   3,   0,
     21,  94, 246, 212, 107,  23, 244, 229,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97, 121,  50,  46,
     99,  97, 112, 110, 112,  58,  82, 101,
     97, 108, 108, 111,  99,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    111, 108, 100,  82, 101, 103,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 101, 119,  82, 101, 103,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_88766922f6704980 = b_88766922f6704980.words;
#if !CAPNP_LITE
static const uint16_t m_88766922f6704980[] = {1, 0, 2};
static const uint16_t i_88766922f6704980[] = {0, 1, 2};
const ::capnp::_::RawSchema s_88766922f6704980 = {
  0x88766922f6704980, b_88766922f6704980.words, 62, nullptr, m_88766922f6704980,
  0, 3, i_88766922f6704980, nullptr, nullptr, { &s_88766922f6704980, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_d4853fd2610d36c3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    195,  54,  13,  97, 210,  63, 133, 212,
     14,   0,   0,   0,   1,   0,   2,   0,
     21,  94, 246, 212, 107,  23, 244, 229,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97, 121,  50,  46,
     99,  97, 112, 110, 112,  58,  70, 114,
    101, 101,  83, 105, 122, 101, 100,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 103,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d4853fd2610d36c3 = b_d4853fd2610d36c3.words;
#if !CAPNP_LITE
static const uint16_t m_d4853fd2610d36c3[] = {0, 1};
static const uint16_t i_d4853fd2610d36c3[] = {0, 1};
const ::capnp::_::RawSchema s_d4853fd2610d36c3 = {
  0xd4853fd2610d36c3, b_d4853fd2610d36c3.words, 47, nullptr, m_d4853fd2610d36c3,
  0, 2, i_d4853fd2610d36c3, nullptr, nullptr, { &s_d4853fd2610d36c3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_ecf4c7b823cc6dc1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    193, 109, 204,  35, 184, 199, 244, 236,
     14,   0,   0,   0,   1,   0,   0,   0,
     21,  94, 246, 212, 107,  23, 244, 229,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97, 121,  50,  46,
     99,  97, 112, 110, 112,  58,  75, 105,
    108, 108,  84, 104, 114, 101,  97, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_ecf4c7b823cc6dc1 = b_ecf4c7b823cc6dc1.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ecf4c7b823cc6dc1 = {
  0xecf4c7b823cc6dc1, b_ecf4c7b823cc6dc1.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ecf4c7b823cc6dc1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c12122cf73a297db = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    219, 151, 162, 115, 207,  34,  33, 193,
     14,   0,   0,   0,   1,   0,   1,   0,
     21,  94, 246, 212, 107,  23, 244, 229,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97, 121,  50,  46,
     99,  97, 112, 110, 112,  58,  83, 119,
    105, 116,  99, 104,  84, 104, 114, 101,
     97, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    116, 104, 114, 101,  97, 100,  73,  68,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c12122cf73a297db = b_c12122cf73a297db.words;
#if !CAPNP_LITE
static const uint16_t m_c12122cf73a297db[] = {0};
static const uint16_t i_c12122cf73a297db[] = {0};
const ::capnp::_::RawSchema s_c12122cf73a297db = {
  0xc12122cf73a297db, b_c12122cf73a297db.words, 34, nullptr, m_c12122cf73a297db,
  0, 1, i_c12122cf73a297db, nullptr, nullptr, { &s_c12122cf73a297db, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<127> b_bd26a88901ff3b3f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     63,  59, 255,   1, 137, 168,  38, 189,
     14,   0,   0,   0,   1,   0,   1,   0,
     21,  94, 246, 212, 107,  23, 244, 229,
      1,   0,   7,   0,   0,   0,   7,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97, 121,  50,  46,
     99,  97, 112, 110, 112,  58,  73, 110,
    115, 116, 114, 117,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 108, 108, 111,  99,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    199,  18,  76,  83,  12,  56,  76, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 101, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    204,  26,  62,  42, 199, 196,  37, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 109,  97, 108, 105, 103, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    140, 146, 148, 143, 199, 182,   6, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 108, 108, 111,  99,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    128,  73, 112, 246,  34, 105, 118, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 101, 101,  83, 105, 122, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    195,  54,  13,  97, 210,  63, 133, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 108, 108,  84, 104, 114, 101,
     97, 100,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    193, 109, 204,  35, 184, 199, 244, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 119, 105, 116,  99, 104,  84, 104,
    114, 101,  97, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    219, 151, 162, 115, 207,  34,  33, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bd26a88901ff3b3f = b_bd26a88901ff3b3f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bd26a88901ff3b3f[] = {
  &s_88766922f6704980,
  &s_b506b6c78f94928c,
  &s_bf25c4c72a3e1acc,
  &s_c12122cf73a297db,
  &s_d4853fd2610d36c3,
  &s_dd4c380c534c12c7,
  &s_ecf4c7b823cc6dc1,
};
static const uint16_t m_bd26a88901ff3b3f[] = {1, 4, 5, 0, 2, 3, 6};
static const uint16_t i_bd26a88901ff3b3f[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_bd26a88901ff3b3f = {
  0xbd26a88901ff3b3f, b_bd26a88901ff3b3f.words, 127, d_bd26a88901ff3b3f, m_bd26a88901ff3b3f,
  7, 7, i_bd26a88901ff3b3f, nullptr, nullptr, { &s_bd26a88901ff3b3f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_cae04fe26109eafb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    251, 234,   9,  97, 226,  79, 224, 202,
     14,   0,   0,   0,   1,   0,   0,   0,
     21,  94, 246, 212, 107,  23, 244, 229,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97, 121,  50,  46,
     99,  97, 112, 110, 112,  58,  66,  97,
    116,  99, 104,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 115, 116, 114, 117,  99, 116,
    105, 111, 110, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     63,  59, 255,   1, 137, 168,  38, 189,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cae04fe26109eafb = b_cae04fe26109eafb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cae04fe26109eafb[] = {
  &s_bd26a88901ff3b3f,
};
static const uint16_t m_cae04fe26109eafb[] = {0};
static const uint16_t i_cae04fe26109eafb[] = {0};
const ::capnp::_::RawSchema s_cae04fe26109eafb = {
  0xcae04fe26109eafb, b_cae04fe26109eafb.words, 37, d_cae04fe26109eafb, m_cae04fe26109eafb,
  1, 1, i_cae04fe26109eafb, nullptr, nullptr, { &s_cae04fe26109eafb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace replay {

// Malloc
constexpr uint16_t Malloc::_capnpPrivate::dataWordSize;
constexpr uint16_t Malloc::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Malloc::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Malloc::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Free
constexpr uint16_t Free::_capnpPrivate::dataWordSize;
constexpr uint16_t Free::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Free::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Free::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Memalign
constexpr uint16_t Memalign::_capnpPrivate::dataWordSize;
constexpr uint16_t Memalign::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Memalign::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Memalign::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Realloc
constexpr uint16_t Realloc::_capnpPrivate::dataWordSize;
constexpr uint16_t Realloc::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Realloc::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Realloc::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FreeSized
constexpr uint16_t FreeSized::_capnpPrivate::dataWordSize;
constexpr uint16_t FreeSized::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FreeSized::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FreeSized::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// KillThread
constexpr uint16_t KillThread::_capnpPrivate::dataWordSize;
constexpr uint16_t KillThread::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind KillThread::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* KillThread::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SwitchThread
constexpr uint16_t SwitchThread::_capnpPrivate::dataWordSize;
constexpr uint16_t SwitchThread::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SwitchThread::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SwitchThread::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Instruction
constexpr uint16_t Instruction::_capnpPrivate::dataWordSize;
constexpr uint16_t Instruction::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Instruction::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Instruction::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Batch
constexpr uint16_t Batch::_capnpPrivate::dataWordSize;
constexpr uint16_t Batch::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Batch::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Batch::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

